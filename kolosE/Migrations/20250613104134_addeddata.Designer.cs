// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using kolosE.DAL;

#nullable disable

namespace kolosE.Migrations
{
    [DbContext(typeof(BatchDbContext))]
    [Migration("20250613104134_addeddata")]
    partial class addeddata
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("kolosE.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            FirstName = "John",
                            HireDate = new DateTime(2025, 6, 13, 12, 41, 34, 305, DateTimeKind.Local).AddTicks(5491),
                            LastName = "Doe"
                        });
                });

            modelBuilder.Entity("kolosE.Models.Nursery", b =>
                {
                    b.Property<int>("NurseryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NurseryId"));

                    b.Property<DateTime>("EstablishedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("NurseryId");

                    b.ToTable("Nurseries");

                    b.HasData(
                        new
                        {
                            NurseryId = 1,
                            EstablishedDate = new DateTime(2025, 6, 13, 12, 41, 34, 305, DateTimeKind.Local).AddTicks(5633),
                            Name = "aaa"
                        });
                });

            modelBuilder.Entity("kolosE.Models.Responsible", b =>
                {
                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("BatchId")
                        .HasColumnType("int");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("EmployeeId", "BatchId");

                    b.HasIndex("BatchId");

                    b.ToTable("Responsibles");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            BatchId = 1,
                            Role = "worker"
                        });
                });

            modelBuilder.Entity("kolosE.Models.Seedling_Batch", b =>
                {
                    b.Property<int>("BatchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BatchId"));

                    b.Property<int>("NurseryId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ReadyDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("SownDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SpeciesId")
                        .HasColumnType("int");

                    b.HasKey("BatchId");

                    b.HasIndex("NurseryId");

                    b.HasIndex("SpeciesId");

                    b.ToTable("SeedlingBatches");

                    b.HasData(
                        new
                        {
                            BatchId = 1,
                            NurseryId = 1,
                            Quantity = 100,
                            ReadyDate = new DateTime(2025, 6, 13, 12, 41, 34, 305, DateTimeKind.Local).AddTicks(5673),
                            SownDate = new DateTime(2025, 6, 13, 12, 41, 34, 305, DateTimeKind.Local).AddTicks(5671),
                            SpeciesId = 1
                        });
                });

            modelBuilder.Entity("kolosE.Models.Tree_Species", b =>
                {
                    b.Property<int>("SpeciesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SpeciesId"));

                    b.Property<int>("GrowthTimeInYears")
                        .HasColumnType("int");

                    b.Property<string>("LatinName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("SpeciesId");

                    b.ToTable("TreeSpecies");

                    b.HasData(
                        new
                        {
                            SpeciesId = 1,
                            GrowthTimeInYears = 1,
                            LatinName = "skibidi"
                        });
                });

            modelBuilder.Entity("kolosE.Models.Responsible", b =>
                {
                    b.HasOne("kolosE.Models.Seedling_Batch", "Seedling_Batch")
                        .WithMany("Responsibles")
                        .HasForeignKey("BatchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("kolosE.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Seedling_Batch");
                });

            modelBuilder.Entity("kolosE.Models.Seedling_Batch", b =>
                {
                    b.HasOne("kolosE.Models.Nursery", "Nursery")
                        .WithMany("Seedling_Batches")
                        .HasForeignKey("NurseryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("kolosE.Models.Tree_Species", "TreeSpecies")
                        .WithMany()
                        .HasForeignKey("SpeciesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Nursery");

                    b.Navigation("TreeSpecies");
                });

            modelBuilder.Entity("kolosE.Models.Nursery", b =>
                {
                    b.Navigation("Seedling_Batches");
                });

            modelBuilder.Entity("kolosE.Models.Seedling_Batch", b =>
                {
                    b.Navigation("Responsibles");
                });
#pragma warning restore 612, 618
        }
    }
}
